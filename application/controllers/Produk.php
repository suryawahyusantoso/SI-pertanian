<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Produk extends CI_Controller
{


    function __construct()
    {
        parent::__construct();
        $this->load->model('Produk_model');
        $this->load->library('form_validation');
    }

    public function index()
    {
        $produk = $this->Produk_model->get_all();

        $data = array(
            'produk_data' => $produk
        );
        $this->load->view('produk/produk_list', $data);
        //$this->template->load('template','produk_list', $data);
    }

    public function read($id)
    {
        $row = $this->Produk_model->get_by_id($id);
        if ($row) {
            $data = array(
		'produk_id' => $row->id,
		'nama_produk' => $row->nama_produk,
		'deskripsi' => $row->deskripsi,
		'harga' => $row->harga,
		'gambar' => $row->gambar,
	    );
            $this->template->load('template','produk_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('produk'));
        }
    }

    public function create()
    {
        $data = array(
            'button' => 'Create',
            'action' => site_url('produk/create_action'),
	    'produk_id' => set_value('produk_id'),
	    'nama_produk' => set_value('nama_produk'),
	    'deskripsi' => set_value('deskripsi'),
	    'harga' => set_value('harga'),
	    'gambar' => set_value('gambar'),
	);
        $this->template->load('template','produk_form', $data);
    }

    public function create_action()
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'kategori_id' => $this->input->post('kategori_id',TRUE),
		'nama_produk' => $this->input->post('nama_produk',TRUE),
		'deskripsi' => $this->input->post('deskripsi',TRUE),
		'harga' => $this->input->post('harga',TRUE),
		'gambar' => $this->input->post('gambar',TRUE),
	    );

            $this->Produk_model->insert($data);
            $this->session->set_flashdata('message', 'Create Record Success');
            redirect(site_url('produk'));
        }
    }

    public function update($id)
    {
        $row = $this->Produk_model->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Update',
                'action' => site_url('produk/update_action'),
		'id' => set_value('id', $row->id),
		'kategori_id' => set_value('kategori_id', $row->kategori_id),
		'nama_produk' => set_value('nama_produk', $row->nama_produk),
		'deskripsi' => set_value('deskripsi', $row->deskripsi),
		'harga' => set_value('harga', $row->harga),
		'gambar' => set_value('gambar', $row->gambar),
	    );
            $this->template->load('template','produk_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('produk'));
        }
    }

    public function update_action()
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('id', TRUE));
        } else {
            $data = array(
		'kategori_id' => $this->input->post('kategori_id',TRUE),
		'nama_produk' => $this->input->post('nama_produk',TRUE),
		'deskripsi' => $this->input->post('deskripsi',TRUE),
		'harga' => $this->input->post('harga',TRUE),
		'gambar' => $this->input->post('gambar',TRUE),
	    );

            $this->Produk_model->update($this->input->post('id', TRUE), $data);
            $this->session->set_flashdata('message', 'Update Record Success');
            redirect(site_url('produk'));
        }
    }

    public function delete($id)
    {
        $row = $this->Produk_model->get_by_id($id);

        if ($row) {
            $this->Produk_model->delete($id);
            $this->session->set_flashdata('message', 'Delete Record Success');
            redirect(site_url('produk'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('produk'));
        }
    }

    public function _rules()
    {
	$this->form_validation->set_rules('kategori_id', 'kategori id', 'trim|required');
	$this->form_validation->set_rules('nama_produk', 'nama produk', 'trim|required');
	$this->form_validation->set_rules('deskripsi', 'deskripsi', 'trim|required');
	$this->form_validation->set_rules('harga', 'harga', 'trim|required');
	$this->form_validation->set_rules('gambar', 'gambar', 'trim|required');

	$this->form_validation->set_rules('id', 'id', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file Produk.php */
/* Location: ./application/controllers/Produk.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2017-01-27 14:22:28 */
/* http://harviacode.com */
